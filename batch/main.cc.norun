#include "./CORE/CMS3.h"
#include "./CORE/SSSelections.h"
#include "TTree.h"
#include "TFile.h"
#include "helper_babymaker.h"
#include "base.h"
#include "CORE/Tools/goodrun.h"
#include "CORE/Tools/JetCorrector.h"
#include "CORE/Tools/jetcorr/JetCorrectionUncertainty.h"  
#include "CORE/Tools/jetcorr/SimpleJetCorrectionUncertainty.h"

int main(int argc, char *argv[]){

  int which_in = 0;
  int file = 2;
  int expt = 0;

  if (argc > 3) {
     which_in = atoi(argv[1]);
     file     = atoi(argv[2]);
     expt     = atoi(argv[3]);
  } 
  else { 
    cout << "not enough arguments!" << endl;  
    return 0;
  }


  sample_t which = static_cast<sample_t>(which_in);

  babyMaker *mylooper = new babyMaker();

  //Path, filename, suffix
  string path = "/store/group/snt/run2_25ns/";
  string name = ""; 
  string shortname = ""; 
  const char* filename = Form("merged_ntuple_%i.root", file);
  const char* suffix = file < 0 ? "" : Form("_%i", file);
  string tag = "V07-04-08";
  bool is25 = true;
  bool isData = false;


  //Info for each sample
  switch (which){
    case TTBAR:
      name="TTJets_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      shortname="ttbar";
      tag = "V07-04-11";
      break;
    case TTW:
      name="TTWJetsToLNu_TuneCUETP8M1_13TeV-amcatnloFXFX-madspin-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      tag = "V07-04-11";
      shortname="ttw";
      break;
    case TTZL:
      name="TTZToLLNuNu_M-10_TuneCUETP8M1_13TeV-amcatnlo-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v2";
      tag = "V07-04-11";
      shortname="ttzl";
      break;
    case WZ:
      name="WZTo3LNu_TuneCUETP8M1_13TeV-powheg-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      shortname="wz";
      tag="V07-04-11";
      break;
    case T1TTTT_1500:
      name="SMS-T1tttt_mGluino-1500_mLSP-100_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      shortname="t1tttt_1500";
      tag="V07-04-11";
      break;
    case T1TTTT_1200:  ###THIS ONE IS MISSING!!!!
      name="SMS-T1tttt_mGluino-1200_mLSP-800_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_RunIISpring15DR74-Asympt25ns_MCRUN2_74_V9-v1";
      tag="V07-04-08";
      shortname="t1tttt_1200";
      break;
    case DY_low:
      name="DYJetsToLL_M-5to50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      tag = "V07-04-11";
      shortname="dy_low";
      break;
    case DY_high:
      name="DYJetsToLL_M-50_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"; 
      tag = "V07-04-11";
      shortname="dy_high";
      break;
    case WJets:
      name="WJetsToLNu_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      tag = "V07-04-11";
      shortname="wjets";
      break;
    case TTZQ:
      name="TTZToQQ_TuneCUETP8M1_13TeV-amcatnlo-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      tag = "V07-04-11";
      shortname="ttzq";
      break;
    case TTWQQ:
      name="TTWJetsToQQ_TuneCUETP8M1_13TeV-amcatnloFXFX-madspin-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      tag = "V07-04-11";
      shortname="ttwqq";
      break;
    case TTG: 
      name="TTGJets_TuneCUETP8M1_13TeV-amcatnloFXFX-madspin-pythia8_RunIISpring15DR74-Asympt25ns_MCRUN2_74_V9-v1";
      shortname="ttg";
      tag="V07-04-11";
      break;
    case SINGLETOP1:
      name="ST_s-channel_4f_leptonDecays_13TeV-amcatnlo-pythia8_TuneCUETP8M1_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"
      shortname="singletop1";
      tag = "V07-04-11";
      break;
    case SINGLETOP2:
      name="ST_t-channel_top_4f_leptonDecays_13TeV-powheg-pythia8_TuneCUETP8M1_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"
      tag = "V07-04-11";
      shortname="singletop2";
      break;
    case SINGLETOP3:
      name="ST_t-channel_antitop_4f_leptonDecays_13TeV-powheg-pythia8_TuneCUETP8M1_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"
      tag = "V07-04-11";
      shortname="singletop3";
      break;
    case SINGLETOP4:
      name="ST_tW_top_5f_inclusiveDecays_13TeV-powheg-pythia8_TuneCUETP8M1_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v2"
      tag = "V07-04-11";
      shortname="singletop4";
      break;
    case SINGLETOP5:
      name="ST_tW_antitop_5f_inclusiveDecays_13TeV-powheg-pythia8_TuneCUETP8M1_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"
      tag = "V07-04-11";
      shortname="singletop5";
      break;
    case QQWW:    ###THIS ONE IS MISSING!!!!
      name="WpWpJJ_EWK-QCD_TuneCUETP8M1_13TeV-madgraph-pythia8_RunIISpring15DR74-Asympt25ns_MCRUN2_74_V9-v1";
      tag="V07-04-08";
      shortname="qqww";
      break;
    case TTTT:
      name="TTTT_TuneCUETP8M1_13TeV-amcatnlo-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      tag="V07-04-11";
      shortname="tttt";
      break;
    case WWDPS:
      name="WW_DoubleScattering_13TeV-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      tag="V07-04-11";
      shortname="wwdps";
      break;
    case TTBAR_PH: ###THIS ONE IS MISSING!!!
      name="TT_TuneCUETP8M1_13TeV-powheg-pythia8_RunIISpring15DR74-Asympt25ns_MCRUN2_74_V9-v2";
      shortname="ttbar_ph";
      tag="V07-04-08_v2";
      break;
    case WJets_LO:
      name="WJetsToLNu_TuneCUETP8M1_13TeV-madgraphMLM-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      shortname="wjets_lo";
      tag="V07-04-11";
      path="/store/group/snt/run2_25ns_MiniAODv2";
      break;
    case WWZ:
      name="WWZ_TuneCUETP8M1_13TeV-amcatnlo-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"
      tag="V07-04-11";
      shortname="wwz";
      break;
    case ZZ:
      name="ZZTo4L_13TeV_powheg_pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v2"
      tag="V07-04-11";
      shortname="zz"; 
      break;
    case TG: ##THIS ONE IS MISSING!!!
      name="TGJets_TuneCUETP8M1_13TeV_amcatnlo_madspin_pythia8_RunIISpring15DR74-Asympt25ns_MCRUN2_74_V9-v1";
      tag="V07-04-08";
      shortname="tg";
      break;
    case ZG:
      name="ZGTo2LG_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"
      tag="V07-04-11";
      shortname="zg";
      break;
    case WZZ:
      name="WZZ_TuneCUETP8M1_13TeV-amcatnlo-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"
      tag="V07-04-11";
      shortname="wzz";
      break;
    case WGToLNuG: 
      name="WGToLNuG_TuneCUETP8M1_13TeV-amcatnloFXFX-pythia8_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1"
      shortname="wgtolnug";
      tag="V07-04-11";
      break;
    case TZQ:
      name="tZq_ll_4f_13TeV-amcatnlo-pythia8_TuneCUETP8M1_RunIISpring15MiniAODv2-74X_mcRun2_asymptotic_v2-v1";
      tag="V07-04-11";
      shortname="tzq";
      break;
    case TTHtoNonBB:
      name="ttHJetToNonbb_M125_13TeV_amcatnloFXFX_madspin_pythia8_mWCutfix_RunIISpring15DR74-Asympt25ns_MCRUN2_74_V9-v1";
      tag="V07-04-08";
      shortname="tthtononbb";
      break;
    case VHtoNonBB:
      name="VHToNonbb_M125_13TeV_amcatnloFXFX_madspin_pythia8_RunIISpring15DR74-Asympt25ns_MCRUN2_74_V9-v1";
      tag="V07-04-08";
      shortname="vhtononbb";
      break;
    case T5QQQQWW_1200_1000_800:
      name="T5qqqqWW_mGo1200_mCh1000_mChi800_dilep";
      path="/nfs-7/userdata/ss2015/signalSamples/V07-04-08/";
      tag="";
      shortname="t5qqqqww_1200_1000_800";
      break;
    case T5ttttDeg_1000_300_285_280:
      name="T5ttttDeg_mGo1000_mStop300_mCh285_mChi280_23bodydec";
      path="/nfs-7/userdata/ss2015/signalSamples/V07-04-08/";
      shortname="t5ttttdeg_1000_300_285_280";
      tag="";
      break;
    case T2ttDeg_350_330:
      name="T2ttDeg_mStop350_mChi330_4bodydec";
      path="/nfs-7/userdata/ss2015/signalSamples/V07-04-08/";
      shortname="t2ttdeg_350_330";
      tag="";
      break;
    case T5QQQQZZ_1200_1000_800:
      name="T5qqqqZZ_mGo1200_mCh1000_mChi800_lep";
      path="/nfs-7/userdata/ss2015/signalSamples/V07-04-08/";
      shortname="t5qqqqzz_1200_1000_800";
      tag="";
      break;
    case T6TTWW_600_425_50:
      name="T6ttWW_600_425_50";
      path="/nfs-7/userdata/ss2015/signalSamples/V07-04-08/";
      tag="";
      shortname="t6ttww_600_425_50";
      break;
    case T5QQQQZZ_1500_800_100:
      name="T5qqqqZZ_mGo1500_mCh800_mChi100_lep";
      path="/nfs-7/userdata/ss2015/signalSamples/V07-04-08/";
      shortname="t5qqqqzz_1500_800_100";
      tag="";
      break;
    case T6TTWW_650_150_50:
      name="T6ttWW_650_150_50";
      path="/nfs-7/userdata/ss2015/signalSamples/V07-04-08/";
      shortname="t6ttww_650_150_50";
      tag="";
      break;
    case DataDoubleMuonD_05oct:
      name="Run2015D_DoubleMuon_MINIAOD_05Oct2015-v1/merged";
      shortname="datadoublemuond_05oct";
      isData = true;
      path="/store/group/snt/run2_data";
      tag="V07-04-11";
      break;
    case DataDoubleEGD_05oct:
      shortname="datadoubleegd_05oct";
      name="Run2015D_DoubleEG_MINIAOD_05Oct2015-v1/merged";
      isData = true;
      path="/store/group/snt/run2_data";
      tag="V07-04-11";
      break;
    case DATAMUONEGD_05oct:
      shortname="datamuonegd_05oct";
      name="Run2015D_MuonEG_MINIAOD_05Oct2015-v2/merged";
      path="/store/group/snt/run2_data";
      isData = true;
      tag="V07-04-11";
      break;
    case DataDoubleMuonC_05oct:
      name="Run2015C_25ns_DoubleMuon_MINIAOD_05Oct2015-v1/merged";
      shortname="datadoublemuonc_05oct";
      isData = true;
      path="/store/group/snt/run2_data";
      tag="V07-04-11";
      break;
    case DataDoubleEGC_05oct:
      shortname="datadoubleegc_05oct";
      name="Run2015C_25ns_DoubleEG_MINIAOD_05Oct2015-v1/merged";
      isData = true;
      path="/store/group/snt/run2_data";
      tag="V07-04-11";
      break;
    case DATAMUONEGC_05oct:
      shortname="datamuonegc_05oct";
      name="Run2015C_25ns_MuonEG_MINIAOD_05Oct2015-v1/merged";
      path="/store/group/snt/run2_data";
      isData = true;
      tag="V07-04-11";
      break;
    case DataDoubleMuonD_v4:
      name="Run2015D_DoubleMuon_MINIAOD_PromptReco-v4/merged";
      shortname="datadoublemuond_v4";
      isData = true;
      path="/store/group/snt/run2_data";
      tag="V07-04-11";
      break;
    case DataDoubleEGD_v4:
      shortname="datadoubleegd_v4";
      name="Run2015D_DoubleEG_MINIAOD_PromptReco-v4/merged";
      isData = true;
      path="/store/group/snt/run2_data";
      tag="V07-04-11";
      break;
    case DATAMUONEGD_v4:
      shortname="datamuonegd_v4";
      name="Run2015D_MuonEG_MINIAOD_PromptReco-v4/merged";
      path="/store/group/snt/run2_data";
      isData = true;
      tag="V07-04-11";
      break;
    default:
      name="dummy";
      path = "/store/group/snt/run2_25ns/";
      break;
  }
  
  //Set up file and tree
  cout << "Using xrootd " << endl;
  mylooper->MakeBabyNtuple(Form("%s%s", shortname.c_str(), suffix), expt);
  TFile *f;
  if (path.find("nfs") < path.length()) f = TFile::Open(Form("%s/%s/%s/%s", path.c_str(), name.c_str(), tag.c_str(), filename)); 
  else f = TFile::Open(Form("root://cmsxrootd.fnal.gov//%s/%s/%s/%s", path.c_str(), name.c_str(), tag.c_str(), filename)); 
  cout << "File opened...." << endl;
  TTree *tree = (TTree*)f->Get("Events");
  cms3.Init(tree);

  //Event Counting
  unsigned int nEvents = tree->GetEntries();
  unsigned int nEventsTotal = 0;
  cout << "nEvents: " << tree->GetEntries() << endl;

  //Add good run list
  if (!is25) set_goodrun_file("final_golden_50ns_40p03pb.txt");
  if ( is25) set_goodrun_file("goldenJson1p56fb.txt");

  //Make Jet Energy Uncertainties
  JetCorrectionUncertainty *jecUnc = 0;
  if ( isData) jecUnc = new JetCorrectionUncertainty("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV5_DATA_Uncertainty_AK4PFchs.txt"); 
  if (!isData) jecUnc = new JetCorrectionUncertainty("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV5_MC_Uncertainty_AK4PFchs.txt"); 

  //Init MVA
  createAndInitMVA("./CORE");

  //JEC files -- 50 ns MC
  std::vector<std::string> jetcorr_filenames_50ns_MC_pfL1L2L3;
  jetcorr_filenames_50ns_MC_pfL1L2L3.push_back  ("CORE/Tools/jetcorr/data/run2_50ns/Summer15_50nsV4_MC_L1FastJet_AK4PFchs.txt");
  jetcorr_filenames_50ns_MC_pfL1L2L3.push_back  ("CORE/Tools/jetcorr/data/run2_50ns/Summer15_50nsV4_MC_L2Relative_AK4PFchs.txt");
  jetcorr_filenames_50ns_MC_pfL1L2L3.push_back  ("CORE/Tools/jetcorr/data/run2_50ns/Summer15_50nsV4_MC_L3Absolute_AK4PFchs.txt");

  //JEC files -- 50 ns DATA
  std::vector<std::string> jetcorr_filenames_50ns_DATA_pfL1L2L3;
  jetcorr_filenames_50ns_DATA_pfL1L2L3.push_back("CORE/Tools/jetcorr/data/run2_50ns/Summer15_50nsV4_DATA_L1FastJet_AK4PFchs.txt");
  jetcorr_filenames_50ns_DATA_pfL1L2L3.push_back("CORE/Tools/jetcorr/data/run2_50ns/Summer15_50nsV4_DATA_L2Relative_AK4PFchs.txt");
  jetcorr_filenames_50ns_DATA_pfL1L2L3.push_back("CORE/Tools/jetcorr/data/run2_50ns/Summer15_50nsV4_DATA_L3Absolute_AK4PFchs.txt");
  jetcorr_filenames_50ns_DATA_pfL1L2L3.push_back("CORE/Tools/jetcorr/data/run2_50ns/Summer15_50nsV4_DATA_L2L3Residual_AK4PFchs.txt");

  //JEC files -- 25 ns MC
  std::vector<std::string> jetcorr_filenames_25ns_MC_pfL1L2L3;
  jetcorr_filenames_25ns_MC_pfL1L2L3.push_back  ("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV2_MC_L1FastJet_AK4PFchs.txt");
  jetcorr_filenames_25ns_MC_pfL1L2L3.push_back  ("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV2_MC_L2Relative_AK4PFchs.txt");
  jetcorr_filenames_25ns_MC_pfL1L2L3.push_back  ("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV2_MC_L3Absolute_AK4PFchs.txt");

  //JEC files -- 25 ns DATA
  std::vector<std::string> jetcorr_filenames_25ns_DATA_pfL1L2L3;
  jetcorr_filenames_25ns_DATA_pfL1L2L3.push_back("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV5_DATA_L1FastJet_AK4PFchs.txt");
  jetcorr_filenames_25ns_DATA_pfL1L2L3.push_back("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV5_DATA_L2L3Residual_AK4PFchs.txt");
  jetcorr_filenames_25ns_DATA_pfL1L2L3.push_back("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV5_DATA_L2Relative_AK4PFchs.txt");
  jetcorr_filenames_25ns_DATA_pfL1L2L3.push_back("CORE/Tools/jetcorr/data/run2_25ns/Summer15_25nsV5_DATA_L3Absolute_AK4PFchs.txt");

  //JECs
  std::vector<std::string> filenames;
  if ( is25 &&  isData) filenames = jetcorr_filenames_25ns_DATA_pfL1L2L3; 
  if ( is25 && !isData) filenames = jetcorr_filenames_25ns_MC_pfL1L2L3;
  if (!is25 && !isData) filenames = jetcorr_filenames_50ns_MC_pfL1L2L3;
  if (!is25 &&  isData) filenames = jetcorr_filenames_50ns_DATA_pfL1L2L3;
  FactorizedJetCorrector *jetCorrAG;
  jetCorrAG = makeJetCorrector(filenames);

  //Event Loop
  for(unsigned int eventAG = 0; eventAG < nEvents; eventAG++){

    //Get Event Content
    cms3.GetEntry(eventAG);
    nEventsTotal++;

    //If data, check good run list
    if (tas::evt_isRealData() && !goodrun(tas::evt_run(), tas::evt_lumiBlock())) continue; 

    //Progress bar
    CMS3::progress(nEventsTotal, nEvents);

    mylooper->ProcessBaby(name, jetCorrAG, jecUnc, expt, file); 

  }//event loop 

  //Delete Chain
  mylooper->CloseBabyNtuple();
  delete f; 

  return 0;

}
